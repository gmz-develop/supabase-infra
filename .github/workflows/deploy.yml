name: deploy-supabase
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    environment: PROD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate required secrets
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          set -euo pipefail
          missing=0
          check() {
            local var_name=$1
            local val="${!var_name:-}"
            if [ -z "$val" ]; then
              echo "::error title=Missing secret:: Secret $var_name is not set"
              missing=1
            fi
          }
          check SUPABASE_PROJECT_REF
          check SUPABASE_DB_PASSWORD
          check SUPABASE_ACCESS_TOKEN
          check SUPABASE_SERVICE_ROLE_KEY
          if [ "$missing" -eq 1 ]; then
            echo "One or more required secrets are missing. Configure repository secrets in Settings → Secrets and variables → Actions."
            exit 1
          fi

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Push DB migrations to remote
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          set -euo pipefail
          # URL-encode password to support special characters
          ENC_PASS=$(python3 - <<'PY'
import os, urllib.parse
print(urllib.parse.quote(os.environ['SUPABASE_DB_PASSWORD'], safe=''))
PY
)
          echo "::add-mask::$ENC_PASS"
          DB_URL="postgresql://postgres:${ENC_PASS}@db.${SUPABASE_PROJECT_REF}.supabase.co:5432/postgres"
          supabase db push --db-url "$DB_URL"

      - name: Set Edge Function secrets
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          SUPABASE_URL="https://${{ secrets.SUPABASE_PROJECT_REF }}.supabase.co"
          supabase secrets set \
            SUPABASE_URL="$SUPABASE_URL" \
            SUPABASE_SERVICE_ROLE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}

      - name: Deploy all Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          if [ -d supabase/edge ]; then
            for d in supabase/edge/*; do
              [ -d "$d" ] || continue
              name=$(basename "$d")
              echo "Deploying function: $name"
              supabase functions deploy "$name" --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
            done
          else
            echo "No supabase/edge directory found; skipping function deploys."
          fi
